Planning Sensors' Energy Savings
========================================================
author: Gabriel Martins Dias
date: 22/03/2015
transition:rotate

<small>
PhD student  
Department of Information and Communication Technologies  
Pompeu Fabra University
</small>

```{r global_options, include=FALSE}
knitr::opts_chunk$set(cache=TRUE)
library(xtable)
library(ggplot2)
```

Introduction
========================================================

54 sensors were positioned inside a room to monitor 
general information about the environment:

- Temperature
- Relative Humidity
- Light
- Voltage (in the sensors)

***

![Laboratory with sensors](www/lab.png)

Data
========================================================

Part of the data, which contains several types of measurements from different sensors:

```{r, echo = FALSE}
days <- c("2004-02-28", "2004-03-01")

if(!file.exists("wsn.data.rds")){
        # download the data, if needed
        if(!file.exists("data_wsn.txt.gz")){
                download.file("http://db.lcs.mit.edu/labdata/data.txt.gz", destfile = "data_wsn.txt.gz")
        }
        
        wsn.data <- read.table("data_wsn.txt.gz", sep=' ')
        
        # dates with good data
        wsn.data.tidy <- subset(wsn.data, (V1 %in% days))
        # complete cases only
        wsn.data.tidy <- wsn.data.tidy[complete.cases(wsn.data.tidy),]
        
        saveRDS(wsn.data.tidy, "wsn.data.rds")
}else{
        wsn.data.tidy <- readRDS("wsn.data.rds")
}
wsn.data <- wsn.data.tidy

names(wsn.data) <- c("Date", "Time", "Epoch", "Sensor", "Temp.", "Humidity", "Light", "Volt.")
wsn.data$Date <- format(as.Date(wsn.data$Date, "%Y-%m-%d"), "%d/%b")
wsn.data$Temp. <- round(wsn.data$Temp., 2)
wsn.data$Humidity <- round(wsn.data$Humidity, 2)
wsn.data$Volt. <- round(wsn.data$Volt., 2)
wsn.data <- wsn.data[, c(1, 3:8)]

idx <- sort(runif(6, 1, nrow(wsn.data)))
```

```{r, results="asis"}
print(xtable(wsn.data[idx, ]), type="html")
```

Source: http://db.lcs.mit.edu/labdata/labdata.html

Similarity of the measurements
========================================================

```{r, echo=FALSE}
day <- "2004-02-28"
nodes <- c(1,3,4, 50)
wsn.data <- subset(wsn.data, Sensor %in% nodes & Date == format(as.Date(day, "%Y-%m-%d"), "%d/%b"))
wsn.data$Sensor <- as.factor(wsn.data$Sensor)
```

Sensors positioned close to each other (1,3,4) make similar measurements. 
However, sensors placed far from each other (1,50) measure completely different values:

```{r, echo=FALSE, fig.width=16, fig.height=7.5, out.width="1000px"}
ggplot(data = wsn.data) + geom_line(aes(x = Epoch, y = Temp., col = Sensor, group = Sensor)) + ylab("Temperature")
```

Problem Statement
========================================================

## Can we predict the measurements of a sensor using measurements from the others?
 
- If yes, it will be possible to turn off some sensors for a while and save their battery for the future.

## Methodology

- Observing the data from one day, we build a prediction model using Random Forest. 
Then, we observe if the model is able to predict the temperature measurements of another day.
Each predicted measurement cannot differ by more than a certain value, which is defined by the user.
